plugins {
    id 'java'
}

group = 'com.ut.rpg'
version = '1.0'


project.configurations.implementation.setCanBeResolved(true)

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
    mavenLocal()
}

dependencies {
    compileOnly 'org.spigotmc:spigot:1.12.2-R0.1-SNAPSHOT'
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.8.0";
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.31'
}

jar{
    from { configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) } }
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

def targetJavaVersion = 8

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
